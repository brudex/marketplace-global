<div class="pcoded-content">
	<div class="pcoded-inner-content">
		<div class="main-body">
			<div class="page-wrapper">
				<div class="page-header">
					<div class="page-header-title">
						<h4>
							Add Merchant Shop
						</h4>

					</div>
				</div>
				<div class="page-body">
					<form class="" onsubmit="saveMerchantShop(event)" id="formMerchantShop">

						<div class="card">

							<div class="card-block">
								<div class="col-lg-12">
									<div class="form-group">

										<label class="form-label"><span class="">Shop Name</label>
										<input type="text" name="shopName" required class="form-control" placeholder="Type your shop name">
									</div>
								</div>

								<div class="col-lg-12">
									<div class="form-group">
										<label class="form-label"><span class="">Shop Description</label>
										<textarea class="form-control" name="description" id="description"
											placeholder="Describe your message"></textarea>
									</div>
								</div>

								<div class="col-lg-12">
									<div class="form-group">
										<label class="form-label"><span class="chg_ps">Market Zone</label>
										<select class="js-example-basic-single form-control custom-select" name="zoneUuid" id="marketZone"
											required>
											<option>Choose an option</option>
											<%data.zones.forEach(data => { %>
											<option value="<%=data.zoneUuid%>"><%=data.name%></option>
											<% }); %>

										</select>
									</div>
								</div>

								<div class="col-lg-12">
									<div class="form-group">
										<label class="form-label"> Merchant Category</label>
										<select class="js-example-basic-single form-control custom-select" name="merchantShopCategoryUuid"
											id="merchantCategory" required>

										</select>
									</div>
								</div>

								<div class="col-lg-12">
									<div class="form-group">
										<label class="form-label"><span class="chg_ps">Merchant</label>
										<select class="js-example-basic-single form-control custom-select" name="merchantUuid" required>
											<option value="">Select an option</option>

											<%data.merchants.forEach(data => { %>
											<option value="<%=data.uuid%>"><%=data.firstName%> <%=data.lastName%> <%=data.email%></option>
											<% }); %>

										</select>
									</div>
								</div>

								<div class="col-lg-12">
									<div class="form-group">
										<label class="form-label"><span class="chg_ps">Categroy</span> image</label>
										<label for="fileInputsImage" id="dropArea" class="drop-area">
											<p>Click to Upload</p>
											<input type="file" id="fileInputsImage" name="fileInputsImage" style="display: none;" multiple />

											<div id="uploadContainer" class="uploadContainer">

											</div>

										</label>
									</div>
								</div>




								<!-- 
								<div class="col-lg-12">
									<div class="form-group">
										<label class="form-label"><span class="chg_ps">Shop</span> image</label>
										<label for="fileInputsImage" id="dropArea" class="drop-area">
											<p>Click to Upload</p>
											<input type="file" id="fileInputsImage" name="fileInputsImage" style="display: none;" multiple />

											<div id="uploadContainer" class="uploadContainer">

											</div>

										</label>
									</div>
								</div> -->



							</div>
							<div class="container">
								<button type="submit" class="btn btn-primary col-md-3 mb-4 mt-1">
									Save </span>
								</button>
							</div>

						</div>
					</form>
				</div>
			</div>
		</div>
		<!-- Warning Section Starts -->
	</div>
</div>


<script type="text/javascript" src="/admin/vendor/jquery/js/jquery.min.js"></script>


<script>
	async function getMerchantShopByZoneId(zoneUUid) {
		fetch(`/api/merchantshopcategory/zone/${zoneUUid}`, {
				method: 'GET',
			})
			.then(response => response.json())
			.then(data => {

				console.log("data", data)
				const secondSelect = document.getElementById('merchantCategory');
				secondSelect.innerHTML = '<option value="">Select an option</option>';

				// Populate the second select with new options
				data.data.forEach(item => {
					const option = document.createElement('option');
					option.value = item.uuid;
					option.textContent = item.name;
					secondSelect.appendChild(option);
				});
			})
			.catch((error) => {
				console.error('Error:', error)


				iziToast.error({
					title: 'Error',
					message: error,
					position: 'bottomRight' // You can adjust the position as needed
				});
			});
	}

	// DataTable
	$(document).ready(function () {


		$("#marketZone").change(() => {
			const zoneUUid = $('#marketZone option:selected').val();

			Promise.allSettled([getMerchantShopByZoneId(zoneUUid)]).then((
				data) => {
				console.log("")
			})

		})

		$('.js-example-basic-single').select2();

		$('#fileInputIcon').change(function (event) {
			//const file = this.files[0];
			event.preventDefault();
			const files = this.files;
			const imagesContainer = $('#uploadContainerIcon');

			imagesContainer.html('')

			const file = files[0];
			const reader = new FileReader();
			reader.onload = function () {
				const imageSrc = reader.result;
				const newImage = $('<div class="uploadedImage"></div>');
				const imageElement = $('<img>');
				const removeButton = $('<button class="removeImage">Remove</button>');

				imageElement.attr('src', imageSrc);
				imageElement.css('width', '100px')
				newImage.append(imageElement);
				newImage.append(removeButton);


				imagesContainer.append(newImage);

				removeButton.click(function (event) {
					event.preventDefault();
					newImage.remove();
				});
			}
			reader.readAsDataURL(file);

		});


		$('#fileInputsImage').change(function (event) {

			//const file = this.files[0];
			event.preventDefault();
			const files = this.files;
			const imagesContainer = $('#uploadContainer');

			imagesContainer.html('')

			const file = files[0];
			const reader = new FileReader();
			reader.onload = function () {
				const imageSrc = reader.result;
				const newImage = $('<div class="uploadedImage"></div>');
				const imageElement = $('<img>');
				const removeButton = $('<button class="removeImage">Remove</button>');

				imageElement.attr('src', imageSrc);
				imageElement.css('width', '100px')
				newImage.append(imageElement);
				newImage.append(removeButton);


				imagesContainer.append(newImage);

				removeButton.click(function (event) {
					event.preventDefault();
					newImage.remove();
				});
			}
			reader.readAsDataURL(file);

		});




	});


	function saveMerchantShop(e) {
		e.preventDefault();

		const fileInputsImage = $('#fileInputsImage')[0].files
		if (fileInputsImage[0] == undefined) {
			return iziToast.error({
				title: 'Error',
				message: " Image is required",
				position: 'bottomRight' // You can adjust the position as needed
			});
		}

		var form = document.getElementById("formMerchantShop")
		const formData = new FormData(form)
		//formData.append("file1", fileInputsImage[0])
		//alert("sdfs")

		fetch('/api/merchantshop/create', {
				method: 'POST',
				body: formData,

			})
			.then(response => response.json())
			.then(data => {
				console.log("data", data)
				console.log('Success:', data);
				if (data.status == "success") {


					$("#formMerchantShop")[0].reset();
					$("#input-container").html('')
					$('#uploadContainer').html('')
					iziToast.success({
						title: 'Success',
						message: data.message,
						position: 'bottomRight' // You can adjust the position as needed
					});



				} else {


					iziToast.error({
						title: 'Error',
						message: data.message,
						position: 'bottomRight' // You can adjust the position as needed
					});



				}
			})
			.catch((error) => {
				console.error('Error:', error)


				iziToast.error({
					title: 'Error',
					message: error,
					position: 'bottomRight' // You can adjust the position as needed
				});
			});



	}

</script>
