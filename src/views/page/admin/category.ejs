<div class="pcoded-content">
	<div class="pcoded-inner-content">
		<div class="main-body">
			<div id="ejsDataCategory" data-name="<%=JSON.stringify(category)%>"></div>

			<div class="page-wrapper">
				<div class="page-header">
					<div class="page-header-title">
						<h4>
							Edit Product/Service Category
						</h4>

					</div>
				</div>
				<div class="page-body">
					<form class="" onsubmit="updateCategory(event)" id="productServiceForm1">

						<div class="card">

							<div class="card-block">
								<div class="col-lg-12">
									<div class="form-group">

										<label class="form-label"><span class="">Category Name</label>
										<input type="text" name="title" id="categoryName" required class="form-control"
											placeholder="Type your product title here">
									</div>
								</div>

								<div class="col-lg-12">
									<div class="form-group">
										<label class="form-label"><span class="">Category Description</label>
										<textarea class="form-control" name="categoryDescription" id="categoryDescription"
											placeholder="Describe your message"></textarea>
									</div>
								</div>

								<div class="col-lg-12">
									<div class="form-group">
										<label class="form-label"> Product / Service</label>
										<select class="form-control custom-select" name="type" id="type" required>
											<option>Choose option</option>
											<option value="product">Product</option>
											<option value="service">Service</option>

										</select>
									</div>
								</div>

								<div class="col-lg-12">
									<div class="form-group">
										<label class="form-label"><span class="chg_ps">Category </span> Icon</label>
										<label for="fileInputIcon" id="dropArea" class="drop-area">
											<p>Click to Upload</p>
											<input type="file" id="fileInputIcon" name="fileInputIcon" style="display: none;" multiple />

											<div id="uploadContainerIcon" class="uploadContainerIcon">

											</div>

										</label>
									</div>
								</div>

								<div class="col-lg-12">
									<div class="form-group">
										<label class="form-label"><span class="chg_ps">Categroy</span> image</label>
										<label for="fileInputsImage" id="dropArea" class="drop-area">
											<p>Click to Upload</p>
											<input type="file" id="fileInputsImage" name="fileInputsImage" style="display: none;" multiple />

											<div id="uploadContainerImage" class="uploadContainerImage">

											</div>

										</label>
									</div>
								</div>


								<input type="submit" class="btn btn-primary float-left" />

							</div>


						</div>
					</form>
				</div>
			</div>
		</div>
		<!-- Warning Section Starts -->
	</div>
</div>


<script type="text/javascript" src="/admin/vendor/jquery/js/jquery.min.js"></script>


<script>
	// DataTable
	$(document).ready(function () {


		const categoryFetch = $('#ejsDataCategory').data('name');

		console.log("files", categoryFetch)

		$("#categoryName").val(categoryFetch.categoryName)
		$("#categoryDescription").val(categoryFetch.description)
		$("#type").val(categoryFetch.type)

		const imagesContainerIcond = $('#uploadContainerIcon');
		const imagesContainerImaged = $('#uploadContainerImage');

		//  Icon Image
		const imageSrc = '/uploads/categoryIcons/' + categoryFetch.icon
		const newImage = $('<div class="uploadedImage"></div>');
		const imageElement = $('<img>');
		const removeButton = $('<button class="removeImage">Remove</button>');
		imageElement.attr('src', imageSrc);
		imageElement.css('width', '100px')
		newImage.append(imageElement);
		newImage.append(removeButton);
		imagesContainerIcond.append(newImage);
		removeButton.click(function (event) {
			event.preventDefault();
			newImage.remove();
		});

		// // Icon Image
		const imageSrcIcon = '/uploads/categoryImages/' + categoryFetch.imageUrl
		const newImageImage = $('<div class="uploadedImage"></div>');
		const imageElementImage = $('<img>');
		const removeButtonImage = $('<button class="removeImage">Remove</button>');
		imageElementImage.attr('src', imageSrcIcon);
		imageElementImage.css('width', '100px')
		newImageImage.append(imageElementImage);
		newImageImage.append(removeButtonImage);
		imagesContainerImaged.append(newImageImage);
		removeButtonImage.click(function (event) {
			event.preventDefault();
			newImageImage.remove();
		});


		$('#fileInputIcon').change(function (event) {
			//const file = this.files[0];
			event.preventDefault();
			const files = this.files;
			const imagesContainer = $('#uploadContainerIcon');

			imagesContainer.html('')

			const file = files[0];
			const reader = new FileReader();
			reader.onload = function () {
				const imageSrc = reader.result;
				const newImage = $('<div class="uploadedImage"></div>');
				const imageElement = $('<img>');
				const removeButton = $('<button class="removeImage">Remove</button>');

				imageElement.attr('src', imageSrc);
				imageElement.css('width', '100px')
				newImage.append(imageElement);
				newImage.append(removeButton);


				imagesContainer.append(newImage);

				removeButton.click(function (event) {
					event.preventDefault();
					newImage.remove();
				});
			}
			reader.readAsDataURL(file);

		});


		$('#fileInputsImage').change(function (event) {

			//const file = this.files[0];
			event.preventDefault();
			const files = this.files;
			const imagesContainer = $('#uploadContainerImage');

			imagesContainer.html('')

			const file = files[0];
			const reader = new FileReader();
			reader.onload = function () {
				const imageSrc = reader.result;
				const newImage = $('<div class="uploadedImage"></div>');
				const imageElement = $('<img>');
				const removeButton = $('<button class="removeImage">Remove</button>');

				imageElement.attr('src', imageSrc);
				imageElement.css('width', '100px')
				newImage.append(imageElement);
				newImage.append(removeButton);


				imagesContainer.append(newImage);

				removeButton.click(function (event) {
					event.preventDefault();
					newImage.remove();
				});
			}
			reader.readAsDataURL(file);

		});






	});



	function updateCategory(e) {
		e.preventDefault();

		const categoryFetch = $('#ejsDataCategory').data('name');
		const formData = new FormData()
		const fileInputsIcon = $('#fileInputIcon')[0].files
		const fileInputsImage = $('#fileInputsImage')[0].files
		const categoryName = $("#categoryName").val()
		const categoryDescription = $("#categoryDescription").val()
		const type = $("#type").val()

		console.log("fileInputsIcon", fileInputsIcon[0])

		console.log("fileInputsImage", fileInputsImage[0])

		console.log("categoryName", categoryName, "categoryDescription", categoryDescription, "type", type)



		const imagesContainerIcond = $('#uploadContainerIcon').html().toString().includes('uploadedImage')
		const imagesContainerImaged = $('#uploadContainerImage').html().toString().includes('uploadedImage')

		console.log("imagesContainerIcond", imagesContainerIcond, "imagesContainerImaged",
			imagesContainerImaged)
		if (!imagesContainerIcond) {

			return iziToast.error({
				title: 'Error',
				message: "Category Icon is required",
				position: 'bottomRight' // You can adjust the position as needed
			});
		}

		if (!imagesContainerImaged) {
			return iziToast.error({
				title: 'Error',
				message: "Category Image is required",
				position: 'bottomRight' // You can adjust the position as needed
			});
		}

		formData.set("file1", fileInputsIcon[0])
		formData.set("file2", fileInputsImage[0])
		formData.set("categoryName", categoryName)
		formData.set("description", categoryDescription)
		formData.set("type", type)

		fetch(`/api/edit-categories/${categoryFetch.uuid}`, {
				method: 'PUT',
				body: formData
			})
			.then(response => response.json())
			.then(data => {
				console.log('Success:', data);
				if (data.status == "success") {

					//$("#productServiceForm1")[0].reset();
					// $("#input-container").html('')
					// $('#uploadContainer').html('')

					iziToast.success({
						title: 'Success',
						message: data.message,
						position: 'bottomRight' // You can adjust the position as needed
					});
					setTimeout(function () {
						window.location.href = `/admin/categories`;
					}, 800)




				} else {


					iziToast.error({
						title: 'Error',
						message: data.message,
						position: 'bottomRight' // You can adjust the position as needed
					});



				}
			})
			.catch((error) => {
				console.error('Error:', error)


				iziToast.error({
					title: 'Error',
					message: error,
					position: 'bottomRight' // You can adjust the position as needed
				});
			});



	}

</script>
